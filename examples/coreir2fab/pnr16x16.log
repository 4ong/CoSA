Produced with: ./run_pnr.py ./mapped_conv_1_2.json ./cgra_info.sixteen --coreir-libs cgralib --print --state-map state-map.txt --annotate conv_1_2.bsa
Loading design: ./mapped_conv_1_2.json
Loading fabric: ./cgra_info.sixteen
Placing design... success!
Routing design... Solving in Monosat...
success!
Successfully placed and routed in 0 iterations
Loading configuration engine with placement and route info


placement info:
module: __HACK__io16in_in_arg_1_0_0 @ {'row': 2, 'col': 2, 'layer': 'Combined'})
inputs: 
outputs: io16in_in_arg_1_0_0

module: add_305_309_310_PE @ {'row': 5, 'col': 2, 'layer': 'Data'})
inputs: const0__304, mul_307_308_309_PE
outputs: add_311_315_316_PE

module: add_311_315_316_PE @ {'row': 5, 'col': 3, 'layer': 'Data'})
inputs: mul_313_314_315_PE, add_305_309_310_PE
outputs: io16_out_0_0

module: io16_out_0_0 @ {'row': 3, 'col': 2, 'layer': 'Combined'})
inputs: add_311_315_316_PE
outputs: 

module: io16in_in_arg_1_0_0 @ {'row': 4, 'col': 2, 'layer': 'Combined'})
inputs: __HACK__io16in_in_arg_1_0_0, __HACK__io_const_0
outputs: mul_313_314_315_PE, mul_307_308_309_PE

module: lb_p4_clamped_stencil_update_stream_wen_lut_bitPE @ {'row': 8, 'col': 12, 'layer': 'Bit'})
inputs: 
outputs: 

module: mul_307_308_309_PE @ {'row': 5, 'col': 4, 'layer': 'Data'})
inputs: const5__308, io16in_in_arg_1_0_0
outputs: add_305_309_310_PE

module: mul_313_314_315_PE @ {'row': 4, 'col': 3, 'layer': 'Data'})
inputs: io16in_in_arg_1_0_0, const5__314
outputs: add_311_315_316_PE


Routing info:
io16in_in_arg_1_0_0 -> mul_313_314_315_PE:
SetList({('io16in_in_arg_1_0_0_pe_out_res', '(4, 2)PE_i_b16[pe_out_res]', '(4, 2)E_o_b16[0]', '(4, 3)PE_o_b16[data0]', 'mul_313_314_315_PE_data0')})
add_311_315_316_PE -> io16_out_0_0:
SetList({('add_311_315_316_PE_pe_out_res', '(5, 3)PE_i_b16[pe_out_res]', '(5, 3)N_o_b16[0]', '(4, 3)N_o_b16[0]', '(3, 3)W_o_b16[0]', '(3, 2)W_o_b16[0]', '(3, 2)PE_o_b16[data0]', 'io16_out_0_0_data0')})
mul_313_314_315_PE -> add_311_315_316_PE:
SetList({('mul_313_314_315_PE_pe_out_res', '(4, 3)PE_i_b16[pe_out_res]', '(4, 3)S_o_b16[0]', '(5, 3)S_o_b16[0]', '(5, 3)PE_o_b16[data1]', 'add_311_315_316_PE_data1')})
__HACK__io16in_in_arg_1_0_0 -> io16in_in_arg_1_0_0:
SetList({('__HACK__io16in_in_arg_1_0_0_pe_out_res', '(2, 2)PE_i_b16[pe_out_res]', '(2, 2)S_o_b16[0]', '(3, 2)S_o_b16[0]', '(4, 2)W_o_b16[0]', '(4, 2)PE_o_b16[data0]', 'io16in_in_arg_1_0_0_data0')})
mul_307_308_309_PE -> add_305_309_310_PE:
SetList({('mul_307_308_309_PE_pe_out_res', '(5, 4)PE_i_b16[pe_out_res]', '(5, 4)W_o_b16[0]', '(5, 3)W_o_b16[0]', '(5, 2)S_o_b16[0]', '(5, 2)PE_o_b16[data1]', 'add_305_309_310_PE_data1')})
add_305_309_310_PE -> add_311_315_316_PE:
SetList({('add_305_309_310_PE_pe_out_res', '(5, 2)PE_i_b16[pe_out_res]', '(5, 2)E_o_b16[0]', '(5, 3)PE_o_b16[data0]', 'add_311_315_316_PE_data0')})
io16in_in_arg_1_0_0 -> mul_307_308_309_PE:
SetList({('io16in_in_arg_1_0_0_pe_out_res', '(4, 2)PE_i_b16[pe_out_res]', '(4, 2)S_o_b16[1]', '(5, 2)E_o_b16[1]', '(5, 3)E_o_b16[1]', '(5, 4)PE_o_b16[data0]', 'mul_307_308_309_PE_data0')})
Writing bitsream to: conv_1_2.bsa
Writing state mapping to: state-map.txt
Warning: Using IO Hack for state mapping -- inferring io16_out_0_0 is IO by name
Warning: Using IO Hack for state mapping -- inferring io16in_in_arg_1_0_0 is IO by name
